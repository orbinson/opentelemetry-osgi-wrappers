<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>be.orbinson.osgi</groupId>
        <artifactId>opentelemetry-java</artifactId>
        <version>1.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>opentelemetry-exporter-otlp</artifactId>
    <version>1.43.0.0001-SNAPSHOT</version>

    <build>
        <plugins>
            <plugin>
                <groupId>biz.aQute.bnd</groupId>
                <artifactId>bnd-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>bnd-process</id>
                        <goals>
                            <goal>bnd-process</goal>
                        </goals>
                        <configuration>
                            <bnd><![CDATA[
                                # We are using okhttp as sender, which does not have a dependency on grpc
                                Import-Package: io.grpc*;resolution:=optional,*

                                # ServiceLoader provider
                                # TODO: remove once bnd 7.1+ is released, will auto-detect the service loader provide-capability
                                Provide-Capability: osgi.service;objectClass:List<String>="io.opentelemetry.sdk.autoconfigure.spi.internal.ComponentProvider";effective:=active,osgi.service;objectClass:List<String>="io.opentelemetry.sdk.autoconfigure.spi.logs.ConfigurableLogRecordExporterProvider";effective:=active,osgi.service;objectClass:List<String>="io.opentelemetry.sdk.autoconfigure.spi.metrics.ConfigurableMetricExporterProvider";effective:=active,osgi.service;objectClass:List<String>="io.opentelemetry.sdk.autoconfigure.spi.traces.ConfigurableSpanExporterProvider";effective:=active,osgi.serviceloader;osgi.serviceloader="io.opentelemetry.sdk.autoconfigure.spi.internal.ComponentProvider";register:="io.opentelemetry.exporter.otlp.internal.OtlpLogRecordExporterComponentProvider",osgi.serviceloader;osgi.serviceloader="io.opentelemetry.sdk.autoconfigure.spi.internal.ComponentProvider";register:="io.opentelemetry.exporter.otlp.internal.OtlpMetricExporterComponentProvider",osgi.serviceloader;osgi.serviceloader="io.opentelemetry.sdk.autoconfigure.spi.internal.ComponentProvider";register:="io.opentelemetry.exporter.otlp.internal.OtlpSpanExporterComponentProvider",osgi.serviceloader;osgi.serviceloader="io.opentelemetry.sdk.autoconfigure.spi.logs.ConfigurableLogRecordExporterProvider";register:="io.opentelemetry.exporter.otlp.internal.OtlpLogRecordExporterProvider",osgi.serviceloader;osgi.serviceloader="io.opentelemetry.sdk.autoconfigure.spi.metrics.ConfigurableMetricExporterProvider";register:="io.opentelemetry.exporter.otlp.internal.OtlpMetricExporterProvider",osgi.serviceloader;osgi.serviceloader="io.opentelemetry.sdk.autoconfigure.spi.traces.ConfigurableSpanExporterProvider";register:="io.opentelemetry.exporter.otlp.internal.OtlpSpanExporterProvider"
                                Require-Capability: osgi.extender;filter:="(osgi.extender=osgi.serviceloader.registrar)"
                            ]]></bnd>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-otlp</artifactId>
            <version>1.43.0</version>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
</project>
